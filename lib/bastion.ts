import { Construct } from 'constructs';
import * as ec2 from 'aws-cdk-lib/aws-ec2';
import * as iam from 'aws-cdk-lib/aws-iam';
import * as s3Assets from 'aws-cdk-lib/aws-s3-assets';

export interface BastionProps {
  vpc: ec2.IVpc,
  bucketName: string
}

export class Bastion extends Construct {
  readonly host : ec2.BastionHostLinux;

  constructor(scope: Construct, id: string, props: BastionProps) {
    super(scope, id);
    
    // eicar test file
    // https://s3-protection.awsworkshop.io/20_deploy/03_test_deploy.html
    const userData = ec2.UserData.forLinux();
    userData.addCommands(
      'wget https://secure.eicar.org/eicar.com.txt',
      `aws s3 cp eicar.com.txt s3://${props.bucketName}/eicar.com.txt`
    );

    this.host = new ec2.BastionHostLinux(this, 'Bastion', { 
      vpc: props.vpc,
      requireImdsv2: true,
      machineImage: ec2.MachineImage.latestAmazonLinux2023({ 
        userData
      })
    });
    
    const pol = 'AmazonSSMManagedInstanceCore'
    this.host.role.addManagedPolicy(iam.ManagedPolicy.fromAwsManagedPolicyName(pol));
  }
}